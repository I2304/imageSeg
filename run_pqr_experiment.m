
function [avgTA, avgCA, stdTA, stdCA] = run_pqr_experiment(...
    spec, ...
    p, ...
    q, ...
    r, ...
    lim, ...
    k, ...
    K, ...
    filename, ...
    truth, ...
    reps ...
)
    addpath('./preprocessing')
    addpath('./pde')
    addpath('./file_exchange')
    addpath('./testing')
    addpath('./clustering')
    addpath('./clustering/fuzme_matlab')
    
    rho = visualize_density(spec, 1, filename);
    % Segment
    M = length(rho); 
    [~, results] = construct_laplacian_model(rho, p, q, r, M, lim);
    plot_eigenfunctions(k, 2, results, p, q, r, M, rho, filename)
    u_data = get_embedding(results, k, r, M, rho);
    TAs = 1:reps; 
    CAs = 1:reps; 
    [a, ~] = numSubplots(reps);
    for j = 1:reps
        clusters = cluster(u_data, k, K, 1);
        [TA, CA] = get_accuracy(clusters, truth);
        TAs(j) = TA; CAs(j) = CA;
        figure(3)
        subplot(a(1), a(2), j)
        plot_clusters(clusters, 3, filename, p, q, r, k, K, true, TA, CA);
    end
    avgTA = mean(TAs); stdTA = std(TAs); 
    avgCA = mean(CAs); stdCA = std(CAs); 
    s = [' $p$ = ' num2str(p)...
            ' , $q$ = ' num2str(q) ...
            ' , $r$ = ' num2str(r) ...
            ' , $k$ = ' num2str(k) ...
            ' , $K$ = ' num2str(K-1)];
    sgtitle(s, 'Interpreter', 'Latex', 'Fontsize', 14); 
    saveas(figure(3),[pwd, '/res_images/', filename, ...
            '/cluster_examples.fig']);
end